swagger: '2.0'
info:
  description: 'megadotnet  https://github.com/megadotnet/'
  version: '1.0'
  title: megadotnet 使用Swagger2 构建RESTful API
  termsOfService: 'https://github.com/megadotnet/'
  contact:
    name: megadotnet
host: 'localhost:7080'
basePath: /
tags:
  - name: user-account-controller
    description: User Account API
  - name: user-jwt-controller
    description: UserJWTController API
paths:
  /api/account:
    get:
      tags:
        - user-account-controller
      summary: getAccount
      description: get Account
      operationId: getAccountUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-account-controller
      summary: saveAccount
      description: save Account
      operationId: saveAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/account/change_password:
    post:
      tags:
        - user-account-controller
      summary: changePassword
      description: change Password
      operationId: changePasswordUsingPOST
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: password
          description: password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/account/reset_password/finish:
    post:
      tags:
        - user-account-controller
      summary: finishPasswordReset
      description: finish PasswordReset
      operationId: finishPasswordResetUsingPOST
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: keyAndPassword
          description: keyAndPassword
          required: true
          schema:
            $ref: '#/definitions/KeyAndPasswordVM'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/account/reset_password/init:
    post:
      tags:
        - user-account-controller
      summary: requestPasswordReset
      description: request PasswordReset
      operationId: requestPasswordResetUsingPOST
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: mail
          description: mail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/activate:
    get:
      tags:
        - user-account-controller
      summary: activateAccount
      description: activate Account
      operationId: activateAccountUsingGET
      produces:
        - '*/*'
      parameters:
        - name: key
          in: query
          description: key
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/authenticate:
    get:
      tags:
        - user-account-controller
      summary: isAuthenticated
      description: is Authenticated
      operationId: isAuthenticatedUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-jwt-controller
      summary: authorize
      description: authorize
      operationId: authorizeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginVM
          description: loginVM
          required: true
          schema:
            $ref: '#/definitions/LoginVM'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/register:
    post:
      tags:
        - user-account-controller
      summary: registerAccount
      description: register Account
      operationId: registerAccountUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
        - text/plain
      parameters:
        - in: body
          name: managedUserVM
          description: managedUserVM
          required: true
          schema:
            $ref: '#/definitions/ManagedUserVM'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  KeyAndPasswordVM:
    type: object
    properties:
      key:
        type: string
      newPassword:
        type: string
    title: KeyAndPasswordVM
  LoginVM:
    type: object
    properties:
      password:
        type: string
      rememberMe:
        type: boolean
      username:
        type: string
        description: User Name
    title: LoginVM
  ManagedUserVM:
    type: object
    properties:
      activated:
        type: boolean
      authorities:
        type: array
        items:
          type: string
      email:
        type: string
      firstName:
        type: string
        description: First Name
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
      langKey:
        type: string
      lastName:
        type: string
      login:
        type: string
      password:
        type: string
    title: ManagedUserVM
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
  UserDTO:
    type: object
    properties:
      activated:
        type: boolean
      authorities:
        type: array
        items:
          type: string
      email:
        type: string
      firstName:
        type: string
        description: First Name
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
      langKey:
        type: string
      lastName:
        type: string
      login:
        type: string
    title: UserDTO
